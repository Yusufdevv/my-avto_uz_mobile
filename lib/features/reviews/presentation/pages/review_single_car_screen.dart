import 'package:auto/assets/colors/color.dart';
import 'package:auto/assets/constants/icons.dart';
import 'package:auto/features/common/widgets/w_app_bar.dart';
import 'package:auto/features/common/widgets/w_scale.dart';
import 'package:auto/features/reviews/presentation/parts/car_show_rating_field.dart';
import 'package:auto/features/reviews/presentation/parts/navigate_comments_button.dart';
import 'package:auto/features/reviews/presentation/parts/review_single_car_actions.dart';
import 'package:auto/features/reviews/presentation/parts/single_car_information_item.dart';
import 'package:carousel_slider/carousel_slider.dart';
import 'package:flutter/material.dart';
import 'package:flutter_svg/svg.dart';

class ReviewSingleCarScreen extends StatefulWidget {
  const ReviewSingleCarScreen({super.key});

  @override
  State<ReviewSingleCarScreen> createState() => _ReviewSingleCarScreenState();
}

class _ReviewSingleCarScreenState extends State<ReviewSingleCarScreen> {
  int currentState = 1;
  CrossFadeState crossFadeState = CrossFadeState.showFirst;
  @override
  Widget build(BuildContext context) => Scaffold(
        backgroundColor: borderCircular,
        appBar: WAppBar(
          centerTitle: false,
          hasBackButton: true,
          extraActions: [
            WScaleAnimation(
              child: SvgPicture.asset(
                AppIcons.share,
                color: grey,
                fit: BoxFit.cover,
                width: 24,
                height: 24,
              ),
              onTap: () {},
            ),
            const SizedBox(width: 16),
          ],
          title: '–û—Ç–∑—ã–≤',
          titleStyle:
              Theme.of(context).textTheme.subtitle1!.copyWith(fontSize: 16),
        ),
        body: SingleChildScrollView(
          physics: const BouncingScrollPhysics(),
          child: Column(
            crossAxisAlignment: CrossAxisAlignment.start,
            children: [
              const SingleCarInformationItem(),
              Stack(
                children: [
                  CarouselSlider.builder(
                    itemCount: 24,
                    itemBuilder: (context, index, realIndex) => Container(
                      width: double.maxFinite,
                      decoration: BoxDecoration(
                        image: DecorationImage(
                          image: NetworkImage(
                              'https://source.unsplash.com/random/$index'),
                          fit: BoxFit.cover,
                        ),
                      ),
                      height: 219,
                    ),
                    options: CarouselOptions(
                      viewportFraction: 1,
                      onPageChanged: (index, reason) {
                        setState(() {
                          currentState = index + 1;
                        });
                      },
                    ),
                  ),
                  Positioned(
                    top: 8,
                    right: 17,
                    child: AnimatedCrossFade(
                      firstChild: Text('$currentState/24',
                          style: Theme.of(context).textTheme.bodyText1),
                      secondChild: Text('${currentState + 1}/24',
                          style: Theme.of(context).textTheme.bodyText1),
                      crossFadeState: CrossFadeState.showFirst,
                      duration: const Duration(milliseconds: 500),
                    ),
                  ),
                ],
              ),
              Padding(
                padding: const EdgeInsets.only(left: 16, top: 16),
                child: RichText(
                  text: TextSpan(
                    children: [
                      TextSpan(
                          text: '–†–∞–∫–µ—Ç–∞ 530 D üöÄ\n',
                          style: Theme.of(context).textTheme.headline1),
                      TextSpan(
                          text: '24 —Ñ–µ–≤—Ä–∞–ª—è 2022',
                          style: Theme.of(context)
                              .textTheme
                              .headline2!
                              .copyWith(fontSize: 13)),
                    ],
                  ),
                ),
              ),
              Padding(
                padding: const EdgeInsets.only(top: 24, left: 16),
                child: Row(
                  children: [
                    const CircleAvatar(
                      radius: 22,
                      backgroundImage:
                          NetworkImage('https://source.unsplash.com/random/1'),
                    ),
                    const SizedBox(width: 8),
                    RichText(
                      text: TextSpan(
                        children: [
                          TextSpan(
                              text: '–ú—É—Ö–∞–º–º–∞–¥–∞–º–∏–Ω\n',
                              style: Theme.of(context).textTheme.subtitle1),
                          TextSpan(
                            text: '12 —è–Ω–≤–∞—Ä—è 2022 –≥.',
                            style: Theme.of(context)
                                .textTheme
                                .headline6!
                                .copyWith(fontSize: 12),
                          ),
                        ],
                      ),
                    ),
                  ],
                ),
              ),
              const Divider(
                color: dividerColor,
                endIndent: 16,
                indent: 16,
                thickness: 1,
                height: 37,
              ),
              AnimatedCrossFade(
                firstChild: Padding(
                    padding: const EdgeInsets.symmetric(horizontal: 16),
                    child: RichText(
                      text: TextSpan(
                        children: [
                          TextSpan(
                            text:
                                '–•–æ—Ç–µ–ª–æ—Å—å –∫—É–ø–∏—Ç—å –º–∞—à–∏–Ω—É –±—ã—Å—Ç—Ä–µ–µ —ç—Ç–æ–π, –µ—Å–ª–∏ —É –≤–∞—Å –µ—Å—Ç—å\n–Ω–∞ —Ä—É–∫–µ –±—ã—Å—Ç—Ä–µ–µ —ç—Ç–æ–π –º–∞—à–∏–Ω—ã, –∫–∞—á–µ—Å—Ç–≤–µ–Ω–Ω–µ–µ –∏\n–º–æ—â–Ω–µ–µ, —è –º–æ–≥—É –∫—É–ø–∏—Ç—å. –ù–æ –≤—Å–µ —Ç–∞–∫–∏, –∑–∞ –≤—Å–µ –≤—Ä–µ–º—è –Ω–µ\n–ø–æ–∂–∞–ª–µ–ª –≤–ª–∞–¥–µ–Ω–∏–µ–º —ç—Ç–æ–π –º–∞—à–∏–Ω—ã, –æ—á–µ–Ω—å –∫–æ–º—Ñ–æ—Ä—Ç–Ω–æ,\n–ó–∞ –≥–æ–¥ –∏ 4 –º–µ—Å—è—Ü–∞ –Ω–µ –≤—ã–∑–≤–∞–ª–∞ –Ω–∞—Ä–µ–∫–∞–Ω–∏–π –≤ —Å–µ—Ä–≤–∏—Å–µ\n–±—ã–ª–∞ —Ç–æ–ª—å–∫–æ –Ω–∞ –¢–û , —Ä–∞—Å—Ö–æ–¥ —Ç–æ–ø–ª–∏–≤–∞ —É–º–µ—Ä–µ–Ω–Ω—ã–π , —Ö–æ—Ç—è\n–∏ –ø—Ä–æ–±–µ–≥ –Ω–µ –±–æ–ª—å—à–æ–π —É –º–∞—à–∏–Ω—ã , –±—Ä–∞–ª –∂–µ–Ω–µ –∞ –∫–∞—Ç–∞–ª—Å—è\n—Å–∞–º –æ–Ω–∞ —Ç–æ–ª—å–∫–æ –ø–∞—Ä—É —Ä–∞–∑ –ø—Ä–æ–∫–∞—Ç–∏–ª–∞—Å—å , –µ–π –±–æ–ª—å—à–µ –º–æ—è\n–Ω—Ä–∞–≤–∏—Ç—å—Å—è –°–∞–Ω—Ç–∞ –§–ï , —Ç–∞–∫ —á—Ç–æ –º–∞—à–∏–Ω–∞ –±—ã–ª–∞ —Ç–æ–ª—å–∫–æ –¥–ª—è\n—Ä–∞–∑—ä–µ–∑–¥–∞ –ø–æ –≥–æ—Ä–æ–¥—É –∏ –¥–ª—è –æ—Ç–≤–æ–∑–∞ —Ä–µ–±—ë–Ω–∫–∞ –≤ —à–∫–æ–ª—É –∏\n–æ–±—Ä–∞—Ç–Ω–æ...',
                            style: Theme.of(context)
                                .textTheme
                                .headline2!
                                .copyWith(fontSize: 13),
                          ),
                          WidgetSpan(
                            child: WScaleAnimation(
                              child: Text(
                                '–ë–æ–ª—å—à–µ',
                                style: Theme.of(context)
                                    .textTheme
                                    .headline2!
                                    .copyWith(
                                      color: orange,
                                      fontSize: 13,
                                    ),
                              ),
                              onTap: () {
                                setState(() {
                                  crossFadeState = CrossFadeState.showSecond;
                                });
                              },
                            ),
                          )
                        ],
                      ),
                    )),
                secondChild: WScaleAnimation(
                  child: Text(
                    'Back',
                    style: Theme.of(context).textTheme.headline2!.copyWith(
                          color: orange,
                          fontSize: 13,
                        ),
                  ),
                  onTap: () {
                    setState(() {
                      crossFadeState = CrossFadeState.showFirst;
                    });
                  },
                ),
                firstCurve: Curves.linear,
                secondCurve: Curves.linear,
                crossFadeState: crossFadeState,
                duration: const Duration(milliseconds: 3000),
              ),
              const Divider(
                color: dividerColor,
                endIndent: 16,
                indent: 16,
                thickness: 1,
                height: 37,
              ),
              const ReviewSingleCarActions(),
              const SizedBox(height: 16),
              const Divider(color: dividerColor, thickness: 1),
              const SizedBox(height: 25),
              const CarShowRatingField(),
              const SizedBox(height: 25),
              Container(
                width: MediaQuery.of(context).size.width,
                margin: const EdgeInsets.symmetric(horizontal: 16),
                padding:
                    const EdgeInsets.symmetric(horizontal: 12, vertical: 16),
                decoration: BoxDecoration(
                    border: Border.all(color: border, width: 1),
                    borderRadius: BorderRadius.circular(12),
                    color: white),
                child: Column(
                  crossAxisAlignment: CrossAxisAlignment.start,
                  children: const [
                    ReviewWrapBuilder(
                      title: '–ü–ª—é—Å—ã',
                      titleIcon: AppIcons.plus,
                      iconColor: green,
                      labels: [
                        '–í–º–µ—Å—Ç–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å —Å–∞–ª–æ–Ω–∞',
                        '–û–±–∑–æ—Ä–Ω–æ—Å—Ç—å',
                        '–î–∏–∑–∞–π–Ω',
                        '–®—É–º–æ–∏–∑–æ–ª—è—Ü–∏—è',
                        '–ë–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å'
                      ],
                    ),
                    SizedBox(height: 20),
                    ReviewWrapBuilder(
                      title: '–ú–∏–Ω—É—Å—ã',
                      titleIcon: AppIcons.minus,
                      iconColor: red,
                      labels: ['–ö–∞—á–µ—Å—Ç–≤–æ —Å–±–æ—Ä–∫–∏', '–ö–æ—Ä–æ–±–∫–∞ –ø–µ—Ä–µ–¥–∞—á'],
                    ),
                  ],
                ),
              ),
              const SizedBox(height: 32),
              const NavigateCommentsButton()
            ],
          ),
        ),
      );
}

class ReviewWrapBuilder extends StatelessWidget {
  final List<String> labels;
  final String title;
  final String titleIcon;
  final Color iconColor;
  const ReviewWrapBuilder({
    required this.labels,
    required this.title,
    required this.titleIcon,
    required this.iconColor,
    Key? key,
  }) : super(key: key);

  @override
  Widget build(BuildContext context) => Column(
        crossAxisAlignment: CrossAxisAlignment.start,
        children: [
          Row(
            children: [
              Container(
                decoration: BoxDecoration(
                  borderRadius: BorderRadius.circular(4),
                  color: iconColor.withOpacity(0.1),
                ),
                height: 20,
                width: 20,
                padding: const EdgeInsets.all(4),
                child: SvgPicture.asset(
                  titleIcon,
                  color: iconColor,
                ),
              ),
              const SizedBox(width: 8),
              Text(
                title,
                style: Theme.of(context)
                    .textTheme
                    .headline1!
                    .copyWith(fontSize: 16),
              ),
            ],
          ),
          const SizedBox(height: 12.5),
          Wrap(
            spacing: 4,
            runSpacing: 4,
            children: [
              for (var i in labels)
                Chip(
                  label: Text(
                    i,
                    style: Theme.of(context).textTheme.headline2,
                  ),
                  shape: RoundedRectangleBorder(
                    side: const BorderSide(color: border, width: 1),
                    borderRadius: BorderRadius.circular(44),
                  ),
                  backgroundColor: borderCircular,
                )
            ],
          ),
        ],
      );
}
